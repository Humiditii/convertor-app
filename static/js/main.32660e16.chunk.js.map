{"version":3,"sources":["containers/Pages/AuthPages/Signup/Signup.module.css","components/Ui/Preloader/Preloader.module.css","containers/Pages/Home/home.module.css","containers/Pages/converter/FileExtract/fileExtract.module.css","store/reducers/authReducer.js","store/actions/actionTypes.js","store/reducers/convertReducer.js","hoc/Auxillary.js","components/NavBar/NavUrl/NavUrl.js","components/NavBar/NavBar.js","components/NavBar/Footer/Footer.js","containers/Bone/Bone.js","components/Ui/Forms/TextInput/TextInput.js","components/Ui/Button/Button.js","components/Ui/Preloader/Preloader.js","axios-instance.js","store/actions/auth.js","containers/Pages/AuthPages/Signup/Signup.js","containers/Pages/AuthPages/Signin/Signin.js","containers/Pages/Home/Home.js","store/actions/convert.js","containers/Pages/converter/FileExtract/FileExtract.js","containers/Pages/converter/viewConvert/ViewFiles.js","containers/Pages/AuthPages/Logout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","error","loading","token","userId","authMsg","signupMsg","toBeRedirected","mismatch","state","action","authStart","authFail","redirectAuth","authSignUp","login","authSuccess","role","authMessage","authLogout","reducer","type","filename","filecontent","dateConverted","message","fileDetails","fileEmpty","initConversion","conversionFailed","getConvertedFiles","emptyFile","emptyFIle","clear","conversionSuccess","fileContent","Aux","props","children","navurl","to","link","navname","Navbar","console","log","this","document","addEventListener","elems","querySelectorAll","M","Sidenav","init","navConfigs","links","name","className","data-target","map","item","index","NavUrl","key","id","Component","connect","auth","withRouter","Footer","align","Date","getFullYear","Bone","NavBar","classes","footer","textinputs","iconname","inputid","inputtype","onChange","changed","htmlFor","labelname","btnStyles","btnColour","btncolour","button","btnname","actionType","whereto","preloader","Loader","style","color","instance","axios","create","baseURL","logout","localStorage","removeItem","checkAuthTimeout","expiresIn","dispatch","setTimeout","checkAuthState","getItem","expirationDate","getTime","Signup","email","password","confirmPwd","inputHandler","event","updateFields","target","value","setState","onSubmitHandler","preventDefault","onSignUp","config","icon","form","register","pwdMismatch","onSubmit","TextInput","Button","Preloader","paddingTop","minHeight","body","post","headers","then","response","data","catch","err","signUp","Signin","onSignIn","Message","setItem","signIn","home","conversionProcess","fileToConvert","formData","FormData","append","result","fileContentArr","file_content","x","push","file_name","getFiles","get","FileExtract","selectedFile","onFileChange","files","handleSubmit","onUploadFile","onFileEmpty","onClear","onAutoSignIn","extract","convert","ViewFiles","onClickHandler","alert","onAuthoSignIn","onGetFiles","tables","_id","convert_date","getMonth","getDate","backgroundColor","alignItems","fontFamily","Logout","onLogout","App","path","component","exact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","authReducer","convertReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","getElementById","URL","process","href","origin","fetch","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.32660e16.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"register\":\"Signup_register__2BtQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Preloader_Loader__2k0RY\",\"load2\":\"Preloader_load2__18rC-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home_home__21_Nu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"extract\":\"fileExtract_extract__1LA74\"};","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    error: false,\n    loading: false,\n    token: null,\n    userId: null,\n    authMsg: null,\n    signupMsg: null,\n    toBeRedirected: false,\n    mismatch: null\n}\n\nconst mismatch = (state, action) => {\n    return {\n        ...state,\n        mismatch: 'Password Mismatch'\n    }\n}\n\nconst authStart = (state, action) => {\n    return {\n        ...state,\n        loading: true\n    }\n}\nconst authFail = (state, action) => {\n   return {\n        ...state,\n        error: action.error,\n        loading: false\n   }\n}\n\nconst redirectAuth = (state,action) => {\n    return {\n        ...state,\n        toBeRedirected: true\n    }\n}\n\nconst authSignUp = (state, action) => {\n    return {\n        ...state,\n        error:null,\n        loading:false,\n        toBeRedirected: true,\n        signupMsg: action.signupMsg\n\n    }\n}\n\nconst login = (state, action) => {\n    return {\n        ...state,\n        toBeRedirected: true\n    }\n}\n\nconst authSuccess = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        token: action.token,\n        userId: action.userId,\n        role: action.role,\n        authMsg: action.authMessage,\n        toBeRedirected: true,\n        error: false\n    }\n}\n\nconst authLogout = (state, action) => {\n    return {\n        ...state,\n        token: null,\n        userId: null,\n        role: null,\n        authMsg: null,\n        toBeRedirected: false\n    }\n}\nconst reducer = (state=initialState, action) => {\n    switch( action.type ){\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_FAIL : return authFail(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.SIGNUP: return authSignUp(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        case actionTypes.MISMATCH : return mismatch(state, action);\n        case actionTypes.LOGIN: return login(state, action);\n        case actionTypes.REDIRECT: return redirectAuth(state, action);\n        default:\n            return state;\n    }\n}\n\n\nexport default reducer;","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const LOGIN = 'LOGIN';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const SIGNUP = 'SIGNUP';\nexport const MISMATCH = 'MISMATCH';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const REDIRECT = 'REDIRECT';\nexport const DASHBOARD_SUMMARY = 'DASHBOARD_SUMMARY';\nexport const INIT_DASHBOARD_SUMMARY = 'INIT_DASHBOARD_SUMMARY';\nexport const DASHBOARD_SUMMARY_SUCCESS = 'DASHBOARD_SUMMARY_SUCCESS';\nexport const DASHBOARD_SUMMARY_FAILED = 'DASHBOARD_SUMMARY_FAILED';\nexport const INIT_CONVERSION = 'INIT_CONVERSION';\nexport const CONVERSION_SUCCESS = 'CONVERSION_SUCCESS';\nexport const CONVERSION_FAILED = 'CONVERSION_FAILED ';\nexport const GENERATED_PINS = 'GENERATED_PINS';\nexport const GET_CONVERTED_FILES = 'GET_CONVERTED_FILES';\nexport const EMPTY_FILE = 'EMPTY_FILE';\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';","import * as actionTypes from '../actions/actionTypes';\n\n\n\nconst initialState = {\n    filename: null,\n    filecontent: [],\n    dateConverted: null,\n    loading: false,\n    error: null,\n    message: null,\n    fileDetails: [],\n    fileEmpty: null\n\n}\n\nconst initConversion = (state, action) => {\n    return{\n        ...state,\n        loading: true   \n    }\n}\n\nconst conversionFailed = (state, action) => {\n    return {\n        ...state,\n        loading: false,\n        error: action.error\n    }\n}\n\n\n\nconst getConvertedFiles = (state, action) => {\n    return {\n        ...state,\n        fileDetails: [...action.fileDetails],\n        loading: false\n    }\n}\n\nconst emptyFile = (state, action) => {\n    return {\n        ...state,\n        fileEmpty : action.emptyFIle\n    }\n}\n\n\nconst clear = (state, action) => {\n    return {\n        ...state,\n        fileEmpty: null\n\n    }\n}\n\nconst conversionSuccess = (state, action) => {\n    // const fc = [...action.fileContent]\n    // const xFc = [];\n    // for (const y of fc) {\n    //     xFc.push(y)\n    // }\n    return {\n        ...state,\n        filename: action.filename,\n        filecontent: [...action.fileContent],\n        loading: false\n    }\n    \n}\n\nconst reducer  = (state=initialState, action) =>{\n    switch (action.type) {\n        case actionTypes.INIT_CONVERSION: return initConversion (state, action);\n        case actionTypes.CONVERSION_SUCCESS: return conversionSuccess(state, action);\n        case actionTypes.CONVERSION_FAILED: return conversionFailed(state, action);\n        case actionTypes.GET_CONVERTED_FILES : return getConvertedFiles(state, action);\n        case actionTypes.EMPTY_FILE : return emptyFile(state, action);\n        case actionTypes.CLEAR_MESSAGE : return clear(state, clear);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","const Aux = props => props.children;\n\nexport default Aux;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\nconst navurl = props => {\n    return (\n        <li><NavLink to={props.link}>{props.navname}</NavLink></li>\n    );\n}\n\nexport default navurl","import React , { Component} from 'react';\nimport Aux from '../../hoc/Auxillary';\nimport NavUrl from './NavUrl/NavUrl';\nimport M from 'materialize-css';\nimport {NavLink, withRouter} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\nclass Navbar extends Component  {\n    componentDidMount(){\n        console.log(this.props)\n        document.addEventListener('DOMContentLoaded', function() {\n            const elems = document.querySelectorAll('.sidenav');\n            const instances = M.Sidenav.init(elems);\n            return instances\n          });\n    }\n    render(){\n\n        let navConfigs = {\n            links: ['/', '/login', '/register' ],\n            name: ['Home', 'Login', 'Register' ]\n        }\n\n\n        if( this.props.token){\n            navConfigs = {\n                links: ['/',  '/files_converted', '/convert', '/logout'],\n                name: ['Home', 'Files Converted', 'Convert', 'Logout' ]\n            }\n        }\n        \n        return (\n            <Aux>\n\n            <nav>\n                <div className=\"nav-wrapper  indigo lighten-1\">\n                    <NavLink to=\"#\" className=\"brand-logo\">Convertor</NavLink>\n                    <NavLink to=\"#\" data-target=\"mobile-demo\" className=\"sidenav-trigger\"><i className=\"material-icons\">menu</i></NavLink>\n                        <ul className=\"right hide-on-med-and-down\">\n                            { navConfigs.links.map( (item, index) => (\n                                <NavUrl key={index} link={item} navname={navConfigs.name[index]} />   \n                            ))}\n                        </ul>\n                </div>\n            </nav>\n\n           \n            <ul className=\"sidenav sidenav-close\" id=\"mobile-demo\">\n                { navConfigs.links.map( (item, index) => (\n                    <NavUrl key={index} link={item} navname={navConfigs.name[index]} />\n                ))}\n            </ul>  \n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token\n    }\n}\n\nexport default connect(mapStateToProps)(withRouter(Navbar)); \n\n\n","import React, {Component} from 'react';\nimport Aux from '../../../hoc/Auxillary';\n\n\nclass Footer extends Component {\n\n    render(){\n        return (\n            <Aux>\n                <div className=\"page-footer  indigo lighten-1\">\n                    \n                    <div className=\"footer-copyright\">\n                        <div className=\"container\" align='center'>\n\n                       Developed by Anjonix Vyte Technology © {new Date().getFullYear()} Copyright Text\n                        \n                        </div>\n                    </div>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nexport default Footer;\n","import React from 'react';\nimport Aux from '../../hoc/Auxillary';\nimport NavBar from '../../components/NavBar/NavBar';\nimport Footer from '../../components/NavBar/Footer/Footer';\nimport classes from './Bone.module.css';\nconst Bone = (props) => {\n    return (\n        <Aux>\n          <NavBar />\n          {/*Application navigation goes here*/}\n\n          {props.children}  \n\n          {/*Application footer  goes here*/}\n          <Footer className = {classes.footer}  />\n        </Aux>\n    );\n} \n\nexport default Bone;","import React from 'react';\nimport Aux from '../../../../hoc/Auxillary';\n\n\nconst textinputs = props => {\n    return (\n        <Aux>\n                <div className=\"input-field col s12\">\n                <i className=\"material-icons prefix\">{props.iconname}</i>\n                <input id={props.inputid} type={props.inputtype} onChange={props.changed} />\n                <label htmlFor={props.inputid}>{props.labelname}</label>\n                </div>\n        </Aux>\n    );\n}\n\nexport default textinputs; ","import React from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport {NavLink, withRouter} from 'react-router-dom'\n\nconst button = props => {\n    const btnStyles = ['btn waves-effect waves btn-medium  ', 'material-icons left']\n    const btnColour = props.btncolour;\n    btnStyles[0] = btnStyles[0] + btnColour;\n    let button = (\n            <button type={props.action} className={btnStyles[0]}>\n                <i className={btnStyles[1]}>{props.iconname}</i>{props.btnname}\n            </button>\n    );\n\n    if (props.actionType === 'link' ){\n        button = (\n            <NavLink  type={props.action} to={props.whereto} className={btnStyles[0]}>\n            <i className={btnStyles[1]}>{props.iconname}</i>{props.btnname}</NavLink>\n        );\n    }\n    return (\n        <Aux>\n            {button}\n        </Aux>\n    );\n}\n\nexport default withRouter(button);","import React from 'react';\nimport Aux from '../../../hoc/Auxillary'\n\nimport classes from './Preloader.module.css';\n\nconst preloader = () => (\n    <Aux>\n        <div className={classes.Loader}>Loading...</div>\n        <p align='center' style={{color:'indigo'}}>Loading...</p>\n    </Aux>\n    \n);\n\nexport default preloader;","import axios from 'axios';\n\nconst instance = axios.create({\n    // baseURL: 'https://convertor-api.herokuapp.com/api/v1'\n    baseURL: 'http://localhost:3333/api/v1/'\n});\n\nexport default instance;","import axios from '../../axios-instance';\n// import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\n\nexport const authStart = () =>{\n    return {\n        type: actionTypes.AUTH_START,\n        \n    };\n};\n\nexport const authSignUp = (signupMsg) => {\n    return {\n        type: actionTypes.SIGNUP,\n        signupMsg: signupMsg\n    };\n};\n\n\nexport const redirectAuth = () => {return {type: actionTypes.REDIRECT}\n }\n\nexport const mismatch = () => {\n    return {\n        type: actionTypes.MISMATCH\n    }\n}\n\nexport const login = () => {\n    return {\n        type: actionTypes.LOGIN\n    }\n}\n\nexport const authSuccess = (userId, token, role, message) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token,\n        userId: userId,\n        role: role,\n        authMessage: message\n\n    };\n};\n\n\n\nexport const authFail = (error) => {\n    return{\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\n\nexport const logout = () => {\n\n    localStorage.removeItem('token');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('message');\n    localStorage.removeItem('expirationDate');\n\n    return{\n        type: actionTypes.AUTH_LOGOUT\n    }\n}\n\n\n\nexport const checkAuthTimeout = (expiresIn) => {\n    return dispatch => {\n\n        setTimeout(() => {\n            dispatch(logout());\n        }, expiresIn);\n    }\n}\n\nexport const signUp = (email,password) => {\n    return dispatch => {\n        dispatch(authStart());\n        const body = {\n            email: email,\n            password: password\n        }\n        const endpoint = '/auth/signup';\n\n        axios.post(endpoint, body, {\n            headers:{\n                'Content-Type': 'application/json',\n            }\n        }).then(response => {   \n            //console.log(response);\n           dispatch(authSignUp(response.data.message));\n           \n        }).catch(err => {\n            //console.log(err)\n            dispatch(authFail(err.message));\n        });\n    }\n}\n\n\n\nexport const signIn = (email,password) => {\n    return dispatch => {\n        dispatch(authStart());\n        const body =  {\n            email: email,\n            password: password\n        }\n        //console.log(body)\n        const config =  {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const endpoint = '/auth/signin';\n\n        axios.post(endpoint, body, config).then(response => {\n            //console.log(response.data.message);\n            if( response.data.message === 'User does not exist'){\n               return dispatch(authFail(response.data.message))\n            } \n            if( response.data.message === 'Invalid Password'){\n                return dispatch(authFail(response.data.message))\n            }\n            else{\n                const token = response.data.token;\n                const userId = response.data.userId;\n                const message = response.data.Message;\n                const expiresIn = 3600 * 23* 1000;\n                const expirationDate =new Date(new Date().getTime() + expiresIn);\n\n                localStorage.setItem('token', token);\n                localStorage.setItem('userId', userId);\n                localStorage.setItem('message', message);\n                localStorage.setItem('expirationDate', expirationDate);\n\n                //console.log(message);\n                dispatch(authSuccess(userId, token, message));\n                dispatch(redirectAuth())\n                dispatch(checkAuthTimeout(expiresIn));\n             }\n            \n            \n        }).catch( err=> {\n            //console.log(err)\n            dispatch(authFail(err.message));\n        });\n    }\n}\n\nexport const checkAuthState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if(!token){\n            dispatch(logout());\n            //console.log('First logout excecuted');\n        }else{\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if(expirationDate <= new Date()){\n                dispatch(logout());\n                //console.log('Second logout excecuted');\n            }else{\n                const userId = localStorage.getItem('userId');\n                const message = localStorage.getItem('message');\n                dispatch(authSuccess(userId, token, message));\n                //dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime())/1000));\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) ));\n                //console.log((expirationDate.getTime() - new Date().getTime()) / 1000);\n                //console.log('worked to this extent');\n            }\n        }\n    }\n}","import React , {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { NavLink ,Redirect} from 'react-router-dom';\nimport Aux from '../../../../hoc/Auxillary';\nimport TextInputs from '../../../../components/Ui/Forms/TextInput/TextInput';\nimport Button from '../../../../components/Ui/Button/Button'\n// import ImageUi from '../../../../components/Ui/ImageuI/ImageUi';\n// import Img1 from '../../../../assets/images/vote3.png';\nimport classes from './Signup.module.css';\nimport Preloader from '../../../../components/Ui/Preloader/Preloader';\nimport {signUp, mismatch} from '../../../../store/actions/auth';\n\n\n\nclass Signup extends Component {\n\n    state = {\n        email : null,\n        password: null,\n        confirmPwd: null\n    }\n\n    inputHandler = (event, item ) => {\n        const updateFields = {\n            ...this.state,\n            [item]: event.target.value\n        }\n        this.setState(updateFields);\n    }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n        const {email, password, confirmPwd} = this.state;\n        if( confirmPwd !== password ){\n            this.props.mismatch();\n        }else{\n            this.props.onSignUp(email, password);\n        }\n        \n    }\n\n    render(){\n        const config = {\n            name: ['email',  'password', 'confirmPwd'],\n            type: ['text', 'password', 'password'],\n            icon: ['mail', 'security', 'security']\n        }\n        let form = (\n            <Aux>\n                <div className='row z-depth-5'>\n                <h5 className={classes.register} align='center' >Get Started With Convertor</h5>\n                <p align='center' style={{color:'red'}} >{ this.props.signupMsg ? 'Email already exist' : null }</p>\n                <p align='center' style={{color:'red'}} >{ this.props.pwdMismatch }</p>\n                <p align='center' style={{color:'red'}} >{ this.props.error}</p>\n                        <form className=\"col s12\" onSubmit={this.onSubmitHandler} >\n                            \n                            {config.name.map( (item, index) => (\n                                <TextInputs key={index} inputid={item} iconname={config.icon[index]}  inputtype={config.type[index]} labelname={item} changed={(event) =>  this.inputHandler(event, item) } />\n                            ) )}\n                           \n                            <div align='center' >\n                            <Button action='submit' btncolour='indigo' btnname='Register'  iconname='directions_bike'  />\n                        </div>\n                                <div>\n                                    <p className={classes.register}>Alread have an account?<NavLink  style={{color: 'indigo'}} to='/login' > <u>Login</u></NavLink></p> \n                                </div>\n                        </form>\n                        </div>\n            </Aux>\n        );\n\n        if( this.props.loading){\n            form = <Preloader />\n        }\n        if( this.props.toBeRedirected){\n           return <Redirect to='/login' />\n        }\n\n        return (\n            <Aux>\n                <div className='container' style={{paddingTop: '50px', minHeight:'100vh'}} > <br></br>\n                   {form}\n                </div>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.auth.loading,\n        error: state.auth.error,\n        toBeRedirected: state.auth.toBeRedirected,\n        signupMsg: state.auth.signupMsg,\n        pwdMismatch: state.auth.mismatch\n    }\n}\n\nconst mapPropsToState = dispatch => {\n    return {\n        onSignUp:(email,password) => { dispatch(signUp( email,password )) },\n        mismatch: () => { dispatch(mismatch()) }\n    }\n}\n\nexport default connect(mapStateToProps, mapPropsToState)(Signup);","import React , {Component} from 'react';\nimport {connect} from 'react-redux';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport Aux from '../../../../hoc/Auxillary';\nimport TextInputs from '../../../../components/Ui/Forms/TextInput/TextInput';\nimport Button from '../../../../components/Ui/Button/Button'\nimport classes from '../Signup/Signup.module.css';\nimport Preloader from '../../../../components/Ui/Preloader/Preloader';\nimport {signIn} from '../../../../store/actions/auth'\n\n\nclass Signin extends Component {\n// componentDidMount(){\n//     console.log(this.props);\n// }\n    state = {\n        email : null,\n        password: null\n    }\n\n\n    inputHandler = (event, item ) => {\n        const updateFields = {\n            ...this.state,\n            [item]: event.target.value\n        }\n        this.setState(updateFields);\n        //console.log(this.state)\n    }\n\n    onSubmitHandler = (event) => {\n        event.preventDefault();\n        const {email, password} = this.state;\n        this.props.onSignIn(email, password);\n    }\n\n    render(){\n\n        const config = {\n            name: ['email', 'password'],\n            type: ['text',  'password'],\n            icon: ['account_circle', 'security']\n        }\n\n        let form = (\n            <Aux>\n                <div className='row z-depth-5'>\n                        <h5 className={classes.register} align='center' >Welcome Back, KIndly Login</h5>\n                        <p align='center' style={{color:'red'}} >{ this.props.error}</p>\n                        <form className=\"col s12\" onSubmit={this.onSubmitHandler} >\n                            \n                            {config.name.map( (item, index) => (\n                                <TextInputs key={index} inputid={item} iconname={config.icon[index]}  inputtype={config.type[index]} labelname={item} changed={(event) =>  this.inputHandler(event, item) } />\n                            ) )}\n                           \n                            <div align='center' >\n                                <Button action='submit' btncolour='indigo' btnname='Login'  iconname='send'  />\n                            </div>\n                                <div>\n                                    <p className={classes.register}>New here?, Please Register here <NavLink style={{color: 'indigo'}} className='waves-effect' to='/register' > <u>Register</u></NavLink></p> \n                                </div>\n                        </form>\n                    </div>\n            </Aux>\n        );\n\n        if( this.props.loading){\n            form = <Preloader />\n        }\n        if( this.props.token ){\n            return <Redirect to='/convert' />\n        }\n        return (\n            <Aux>\n                <div className='container' style={{paddingTop: '50px', minHeight:'100vh'}}> <br></br>\n                    {/* <div align='center '>\n                    <ImageUi width ='300' imagName={Img1} /> <br /> <br />\n                    </div> */}\n                    <Aux>\n                        {form}\n                    </Aux>\n                </div>\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        message: state.auth.authMsg,\n        error: state.auth.error,\n        token: state.auth.token,\n        loading: state.auth.loading,\n        toBeRedirected: state.auth.toBeRedirected\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignIn: (email, password) => { dispatch(signIn(email, password)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);","import React from 'react';\nimport Aux from '../../../hoc/Auxillary';\nimport classes from './home.module.css';\nimport Button from '../../../components/Ui/Button/Button';\n\nconst home = () => {\n    return (\n        <Aux>\n            <div className={classes.home}>\n                <h5>Welcome to the convertor app</h5> <br /> <br /> <br />\n                <div>\n                <h6>Converts a regular pattern of XML files and extract the texts out of the xml tags, all you need to do is Signup then proceed to signin to be able to upload files and convert. You can also view the lists of the converted files you have in your database.</h6>\n                </div> <br />\n                <div align='center' >\n                    <Button btncolour='indigo' btnname='Get Started' actionType='link' iconname='directions_bike' whereto='/register' />\n                </div>\n            </div>\n        </Aux>\n    );\n}\n\nexport default home","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-instance';\n\nexport const initConversion = () => {\n    return {\n        type: actionTypes.INIT_CONVERSION\n    }\n}\n\nexport const conversionFailed = (error) => {\n    return {\n        type: actionTypes.CONVERSION_FAILED,\n        error: error\n    }\n}\n\n\nexport const conversionSuccess = (filename,[...fileContent]) => {\n    return {\n        type: actionTypes.CONVERSION_SUCCESS,\n        filename: filename,\n        fileContent: [...fileContent]\n    }\n}\n\nexport const getConvertedFiles = ([...fileDetails]) => {\n    return {\n        type: actionTypes.GET_CONVERTED_FILES,\n        fileDetails: [...fileDetails]\n    }\n}\n\nexport const emptyFile = () => {\n    return {\n        type: actionTypes.EMPTY_FILE,\n        emptyFIle: 'Empty File, Please Select A Valid XML File'\n    }\n}\n\nexport const clear = () => {\n    return {\n        type: actionTypes.CLEAR_MESSAGE\n    }\n}\n\n\nexport const clearMessage = () => {\n    return dispatch => {\n        setTimeout(() => {\n           dispatch( clear() ); \n        }, 3*1000);\n    }\n}\n\nexport const conversionProcess = (token, fileToConvert) => {\n    return dispatch => {\n        dispatch(initConversion());\n\n        const endpoint = '/convert/upload';\n\n        const formData = new FormData();\n        formData.append('file', fileToConvert, fileToConvert.name);\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                'Authorization': 'Bearer ' + token\n            }\n        }\n    \n        axios.post(endpoint, formData, config ).then( result => {\n            //console.log(result)\n            const fileContentArr = []\n            for (const x of result.data.file_content ) {\n               fileContentArr.push(x); \n            }\n            //console.log(fileContentArr)\n            dispatch( conversionSuccess(result.data.file_name, fileContentArr) )\n\n        }).catch( err => {\n            //console.log(err)\n            dispatch( conversionFailed(err))\n        })\n\n    }\n}\n\nexport const getFiles = (token) => {\n    return dispatch => {\n        dispatch(initConversion());\n        const endpoint = '/convert/files';\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + token\n            }\n        }\n\n        axios.get(endpoint, config).then( response => {\n           dispatch(getConvertedFiles([...response.data.data]) )\n            //console.log(response);\n        }).catch( err => {\n            dispatch( conversionFailed(err) )\n            //console.log(err)\n        });\n\n    }\n}","import React, {Component} from 'react';\nimport Aux from '../../../../hoc/Auxillary';\nimport {checkAuthState} from '../../../../store/actions/auth';\nimport {conversionProcess, emptyFile, clearMessage } from '../../../../store/actions/convert';\nimport {connect} from 'react-redux';\nimport Button from '../../../../components/Ui/Button/Button';\nimport classes from './fileExtract.module.css';\nimport Preloader from '../../../../components/Ui/Preloader/Preloader';\nimport { Redirect } from 'react-router-dom';\n\nclass FileExtract extends Component {\n\n    state = {\n        selectedFile: null\n    }\n\n    componentDidMount(){\n        this.props.onAutoSignIn()\n    }\n    // constructor(props) {\n    //     super(props);\n    //     this.handleSubmit = this.handleSubmit.bind(this);\n    //     this.fileInput = React.createRef();\n    //   }\n      onFileChange = (event) => {\n          this.setState({selectedFile: event.target.files[0]})\n      }\n\n      handleSubmit = (event) => {\n        event.preventDefault();\n        if(!this.state.selectedFile){\n           this.props.onFileEmpty();\n           this.props.onClear();\n        }else{\n            this.props.onUploadFile(this.props.token, this.state.selectedFile)\n        }\n        //console.log(this.state.selectedFile);\n      }\n\n    render(){\n        let form = (\n            <div className={classes.extract} >\n                    <h5>Upload A XML File To Convert</h5><br/><br/><br/>\n                        <p>{this.props.fileEmpty}</p>\n                    <div className='container'>\n                            <form onSubmit={this.handleSubmit}>\n                                <div className=\"file-field input-field\">\n                                <div className=\"btn indigo\">\n                                    <span>File</span>\n                                    <input type=\"file\" onChange={this.onFileChange}  />\n                                </div>\n                                <div className=\"file-path-wrapper\">\n                                    <input className=\"file-path validate\" type=\"text\" />\n                                </div>\n                                </div>\n                                <div align='center' >\n                                     <Button action='submit' btncolour='indigo' btnname='Extract'  iconname='send'  />\n                                </div>\n                            </form>\n                    </div>\n                    {this.props.fileContent.map( (item, index) => (\n                        <p align='center' key={index}>{item}</p>\n                    ) )}\n                </div>\n        );\n\n        if(this.props.loading){\n            form = <Preloader />\n        }\n\n        if(!this.props.token){\n            return <Redirect to='login' />\n        }\n\n        return(\n            <Aux>\n                <div style={{minHeight:'100vh'}}>\n                    {form}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        fileContent:[...state.convert.filecontent],\n        loading: state.convert.loading,\n        fileEmpty: state.convert.fileEmpty\n    }\n}\n\nconst mapPropsToState = dispatch => {\n    return {\n        onUploadFile: (token, fileToConvert) => {dispatch (conversionProcess(token, fileToConvert )) },\n        onFileEmpty: () => { dispatch( emptyFile() ) },\n        onClear: () => { dispatch( clearMessage() ) },\n        onAutoSignIn: () => { dispatch(checkAuthState()) }\n    }\n}\n\n\nexport default connect(mapStateToProps, mapPropsToState)(FileExtract);","import React, {Component} from 'react';\nimport Aux from '../../../../hoc/Auxillary';\nimport {getFiles} from '../../../../store/actions/convert';\nimport { checkAuthState } from '../../../../store/actions/auth';\nimport {connect} from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Button from '../../../../components/Ui/Button/Button';\n\nclass ViewFiles extends Component {\n\n    componentDidMount(){\n        this.props.onAuthoSignIn();\n        this.props.onGetFiles(this.props.token);\n    }\n\n    onClickHandler = (event) =>{\n        event.preventDefault()\n        alert('Hello')\n    }\n\n    render(){\n        let tables = (\n                <div>\n                   <h5 align='center' >List of files Converted</h5> <br/>\n                   <p align='center'>Content appears here once the show bittom is clicked</p>\n                    <div className='responsive-table'>\n                        <table>\n                                <thead>\n                                <tr>\n                                    <th>Name</th>\n                                    <th>Date(YYYY-MM-DD)</th>\n                                    <th>View</th>\n                                </tr>\n                                </thead>\n\n                                <tbody>\n                                {/* <tr> */}\n                                    {this.props.fileDetails.map( (item, index) => (\n                                        <tr key={item._id} >\n                                            <td>\n                                                {item.file_name}\n                                            </td>\n                                            <td>\n                                                {new Date().getFullYear(item.convert_date)+'-'+new Date().getMonth(item.convert_date)+'-'+new Date().getDate(item.convert_date) }\n                                            </td>\n                                            <td>\n                                                <form onSubmit={this.onClickHandler } >\n                                                    <Button action='submit' btncolour='indigo' btnname='Show'  iconname='face'  />\n                                                </form>\n                                                \n                                            </td>\n                                        </tr>\n                                    ))}\n                                    {/* <td>Alvin</td>\n                                    <td>Eclair</td>\n                                    <td>Button</td>\n                                </tr> */}\n                                \n                                </tbody>\n                            </table>\n                    </div>\n                </div>\n        );\n\n        if(!this.props.token){\n            return <Redirect to='/login' />\n        }\n        return (\n            <Aux>\n                <div style={{paddingTop: '50px', minHeight:'100vh', backgroundColor: '#282c34', color: 'white', alignItems: 'center', fontFamily: \"Cambria, Cochin, Georgia, Times, 'Times New Roman', serif\"}} >\n                    {tables}\n                </div>\n                \n            </Aux>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        token: state.auth.token,\n        fileDetails: [...state.convert.fileDetails]\n    }\n}\n\nconst mapPropsToState = dispatch => {\n    return {\n        onAuthoSignIn: () => { dispatch( checkAuthState() )},\n        onGetFiles: (token) => { dispatch(getFiles(token)) }\n    }\n}\n\nexport default  connect(mapStateToProps, mapPropsToState)(ViewFiles);","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport {logout} from '../../../../store/actions/auth';\n\nclass Logout extends Component {\n    componentDidMount () {\n        this.props.onLogout();\n    }\n\n    render () {\n        return <Redirect to=\"/\"/>;\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogout: () => dispatch(logout())\n    };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Bone from './containers/Bone/Bone';\nimport Signup from './containers/Pages/AuthPages/Signup/Signup';\nimport Signin from './containers/Pages/AuthPages/Signin/Signin';\nimport home from './containers/Pages/Home/Home';\nimport FileExtract from './containers/Pages/converter/FileExtract/FileExtract';\nimport ViewFiles from './containers/Pages/converter/viewConvert/ViewFiles';\nimport Logout from './containers/Pages/AuthPages/Logout/Logout';\n\n\n\nfunction App() {\n  return (\n    <div>\n     <Bone>\n        <Switch>\n          <Route path='/register' component={Signup} />\n          <Route path='/login' component={Signin} />\n          <Route path='/convert' component={FileExtract} />\n          <Route path='/files_converted' component={ViewFiles} />\n          <Route path='/logout' component={Logout} />\n          <Route path='/' exact component={home} /> \n        </Switch>\n     </Bone>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport {HashRouter} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport authReducer from './store/reducers/authReducer';\nimport convertReducer from './store/reducers/convertReducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    convert: convertReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\n\nconst app = (\n    <Provider store={store} >\n        <HashRouter>\n            <App />\n        </HashRouter>\n    </Provider>\n);\n\nReactDOM.render(app,document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}